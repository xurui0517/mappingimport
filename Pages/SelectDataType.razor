@page "/"
@using System.Net.Http

@inject ISessionStorageService sessionStorage
@inject HttpClient Http

<TopRowPage TopPage="TopPage.SelectDataType"></TopRowPage>

<Loader Loading="loading"></Loader>

<div class="mt-3 animate slideIn">
    <h3 class="font-weight-bolder">Data Selection <i class="far fa-question-circle icon-blur"></i></h3>
    <div class="btn-group btn-block" role="group" aria-label="Basic example">
        <button type="button" class="btn btn-lg border btn-outline-purple active">Standard Imports</button>
        <button type="button" class="btn btn-lg border btn-outline-purple">User Defined Imports</button>
    </div>
    <div class="d-flex flex-column mt-3 animate slideIn">
        @foreach (var dataType in dataTypes)
        {
            <DataType @key="dataType.Label" IsSelected="@(dataType.Value == selectedDataType.Value)" SelectedData="dataType" OnSelect="SelectData"></DataType>
        }
    </div>
    <div class="mt-3 text-center">
        <img src="/assests/flying.svg" />
    </div>
</div>

@if (showOverlay)
{
    <Overlay Display="block" OnVanish="@(e => showOverlay = false)">
        <div class="bg-purple p-5 text-center rounded" @onclick:stopPropagation="true">
            <img src="/assests/triosquad.svg" />
            <h2 class="text-white mt-3">We are the File Mappings Squad</h2>
            <p class="text-white-50">This tool helps you to map and import files with user defined columns</p>
            <button class="btn btn-primary btn-lg" @onclick="@(e => showOverlay = false)">Let's Get Started</button>
        </div>
    </Overlay>
}

@if (selectedDataType != null && !string.IsNullOrWhiteSpace(selectedDataType.Value))
{
    <BottomBar PrevPage="" NextPage="/FileUpload"></BottomBar>
}

@code {
    private LabelAndValue selectedDataType = new LabelAndValue();

    private bool showOverlay = true;

    private bool loading = true;

    private List<LabelAndValue> dataTypes = new List<LabelAndValue>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await sessionStorage.ClearAsync();
            dataTypes = await Http.GetFromJsonAsync<List<LabelAndValue>>("api/Innovation/GetMappingImportTypes2?DBUsername=ZBN0236&Password=52287F9C-6BCE-4868-A3AE-6939D4FD2448");
            loading = false;
        }
        catch (Exception ex)
        {

        }
    }

    private async Task SelectData(LabelAndValue dataType)
    {
        selectedDataType = dataType;
        await sessionStorage.SetItemAsync<LabelAndValue>("selectedDataType", dataType);
    }
}
